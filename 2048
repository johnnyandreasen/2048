import arcade
import random
import numpy as np
import PIL



WIDTH = 200
HEIGHT = 200

MARGIN = 1

COLUMN_COUNT = 4
ROW_COUNT = 4
TILE_SIZE = 80


SCREEN_WIDTH = (WIDTH + MARGIN) * COLUMN_COUNT + MARGIN
SCREEN_HEIGHT = (HEIGHT + MARGIN) * ROW_COUNT + MARGIN
SCREEN_TITLE = "2048"


    
def new_board():
    board = [[0 for _x in range(COLUMN_COUNT)] for _y in range(ROW_COUNT)]
    board += [[1 for _x in range(COLUMN_COUNT)]]
    board = np.asarray(board)
    return board

def add_random_tile(board):
    empty_cells = [(i, j) for i in range(4) for j in range(4) if board[i][j] == 0]
    if empty_cells:
        i, j = random.choice(empty_cells)
        board[i][j] = 2 if random.random() < 0.9 else 4


def merge_tiles(row):
    new_row = [0] * 4
    index = 0
    for tile in row:
        if tile != 0:
            if new_row[index] == 0:
                new_row[index] = tile
            elif new_row[index] == tile:
                new_row[index] *= 2
                index += 1
            else:
                index += 1
                new_row[index] = tile
    return new_row


class Game_2048(arcade.Window):
    
    def __init__(self, width, height):

        self.board = None
        self.frame_count = 0
        self.game_over = False
        self.paused = False
        self.board_sprite_list = None

        self.stone = None
 
        
    def spawn_tile(self):
        pass
    
    def on_draw(self):
        pass
    
    def on_key_press(self, key, modifiers):
        pass
    
    def move_tiles(self, direction):
        pass
    
    def merge_tiles(self, direction):
        pass
    
    def can_move(self, direction):
        pass
    
def main():
    game = Game_2048(SCREEN_WIDTH, SCREEN_HEIGHT)
    arcade.run()
    
if __name__ == "__main__":
    main()
